    5:    //2gis
      begin
        Link := Edit3.Text;
        st := '/page/'
        re1.Expression := '/firm/(.*?)" cla';
        IdHTTP.Request.CustomHeaders.Add('X-Requested-With: XMLHttpRequest');
        IdHTTP.Request.CustomHeaders.Add('Referer: ' + Link);
        while flag do
          begin
            s := IdHTTP.Get(Link + st + IntToStr(i));
            if re1.Exec(s) then    //собираем ID
              repeat
                lst1.Add(re1.Match[1]);
              until not re1.ExecNext;
            i := i + 1;
            Edit1.Text := IntToStr(lst1.Count);    //показываем кол-во найденных
            if Pos('pagination__arrow _right _disabled', s) > 0 then flag := False;
          end;
        for i := lst1.Count - 1 downto 0 do       //удаление дубликатов
          if lst1.IndexOf(lst1.Strings[i]) < i then lst1.Delete(i);
        Edit1.Text := IntToStr(lst1.Count); //показываем кол-во найденных уникальных
        ProgressBar1.Position := 0;
        ProgressBar1.Visible := True;

        stop_btn.Visible := True;
        Label4.Caption := 'Идёт загрузка данных';
        for i := lst1.Count - 1 downto 0 do
          begin
            if stop_flag then
              Break
            else
              begin
                try
                  begin
                    s := IdHTTP.Get('https://2gis.kz/almaty/firm/' + lst1.Strings[i]);
                    re1.Expression := 'tel:(.*?)" cla';        //Телефон
                    if re1.Exec(s) then
                      repeat
                        ph := ph + ';' + re1.Match[1];
                      until not re1.ExecNext;
                    ph := StringReplace(ph, '\u00a0', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '(', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ')', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '-', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ' ', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '"', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ',', ';', [rfReplaceAll, rfIgnoreCase]);
                    if Copy(ph, 1, 1) = ';' then ph := Copy(ph, 2, Length(ph) - 1);
                    re1.Expression := 'card__addressLink _undashed">(.*?)</a';        //Город
                    re1.Exec(s);
                    ct := Trim(StringReplace(re1.Match[1], '&nbsp;', ' ', [rfReplaceAll, rfIgnoreCase]));
                    ct := Trim(StringReplace(ct, ',', '', [rfReplaceAll, rfIgnoreCase]));
                    re1.Expression := 'cardHeader__headerNameText">(.*?)</h';
                    re1.Exec(t);
                    nm := Trim(StringReplace(re1.Match[1], '&nbsp;', ' ', [rfReplaceAll, rfIgnoreCase]));
                    nm := Trim(StringReplace(nm, ',', '', [rfReplaceAll, rfIgnoreCase]));
                    lst2.Add(nm + ';' + ct + ';' + ph); //добавляем данные в итоговый список
                    Edit2.Text := IntToStr(lst2.Count); //показываем кол-во найденных уникальных номеров
                    ProgressBar1.Position := Round((lst2.Count / lst1.Count) * 100);
                    data_list.Cells[0, lst1.Count - i] := nm;
                    data_list.Cells[1, lst1.Count - i] := ct;
                    data_list.Cells[2, lst1.Count - i] := ph;
                  end;
                except
                  begin
                    data_list.Cells[0, lst1.Count - i] := 'Ошибка'; //иначе ошибка
                    data_list.Cells[1, lst1.Count - i] := 'Ошибка';
                    data_list.Cells[2, lst1.Count - i] := 'Ошибка';
                    Continue;
                  end;
                end;
              end;
          end;
      end;
