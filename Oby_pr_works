unit OLX5;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs, RegExpr, IdHTTP, Vcl.StdCtrls, IdBaseComponent, IdAntiFreezeBase, Vcl.IdAntiFreeze, Vcl.OleCtrls, SHDocVw, Vcl.ComCtrls, IdIOHandler, IdIOHandlerSocket, IdIOHandlerStack, IdSSL, IdSSLOpenSSL, Vcl.Grids;

type
  TForm1 = class(TForm)
    start_btn: TButton;
    Edit1: TEdit;
    IdAntiFreeze1: TIdAntiFreeze;
    SaveDialog1: TSaveDialog;
    ProgressBar1: TProgressBar;
    Edit2: TEdit;
    Label2: TLabel;
    Edit3: TEdit;
    Memo1: TMemo;
    Memo2: TMemo;
    Edit4: TEdit;
    Edit5: TEdit;
    Label1: TLabel;
    Label3: TLabel;
    data_list: TStringGrid;
    Label4: TLabel;
    clear_btn: TButton;
    stop_btn: TButton;
    procedure FormCreate(Sender: TObject);
    procedure start_btnClick(Sender: TObject);
    procedure RamClean;
    procedure SaveToFile;
    procedure Edit3Change(Sender: TObject);
    procedure clear_btnClick(Sender: TObject);
    procedure stop_btnClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  lst2: TStringList;
  stop_flag: Boolean;
  site: Integer;
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.start_btnClick(Sender: TObject);
var
  i: Integer;        //PageCount
  IdHTTP: TIdHTTP;
  IdSSL: TIdSSLIOHandlerSocketOpenSSL;
  s, st, t, ph, nm, ct, Link, pLink: string;    //Phone, Name, City
  lst1, lst3, lst4: TStringList;
  re1: TRegExpr;
  flag: Boolean;
begin
  Edit3.Enabled := False;
  start_btn.Enabled := False;
  clear_btn.Enabled := False;
  stop_flag := False;
  case site of
    0:    //OLX
      begin
        Link := Edit3.Text;
        flag := True;
        i := 1;
        re1 := TRegExpr.Create;
        re1.Expression := '<a href="https://www.olx.kz/obyavlenie/(.*?).html';
        lst1 := TStringList.Create; //список ID объявлений
        IdHTTP := TIdHTTP.Create;
        IdHTTP.HandleRedirects := True;
        IdHTTP.ProtocolVersion := pv1_1;
        IdHTTP.Request.UserAgent := 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36';
        IdHTTP.Request.CustomHeaders.Add('Accept: */*');
        IdHTTP.Request.CustomHeaders.Add('Accept-Encoding:gzip, deflate, sdch, br');
        IdHTTP.Request.CustomHeaders.Add('Accept-Language:ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4');
        IdHTTP.Request.CustomHeaders.Add('Referer: ' + Link);
        Label4.Caption := 'Идёт сбор объявлений';
        while flag = True do
          begin
            s := IdHTTP.Get(Link + '?page=' + IntToStr(i));
            if re1.Exec(s) then    //собираем ID объявлений
              repeat
                lst1.Add(re1.Match[1]);
              until not re1.ExecNext;
            i := i + 1;
            Edit1.Text := IntToStr(lst1.Count);    //показываем кол-во найденных объявлений
            //if Pos(#$9 + '<span>Следующее', s) = 0 then flag := False;
            if Pos('	<span>Следующее', s) = 0 then flag := False;
          end;
        for i := lst1.Count - 1 downto 0 do       //удаление дубликатов
          if lst1.IndexOf(lst1.Strings[i]) < i then lst1.Delete(i);
        Edit1.Text := IntToStr(lst1.Count); //показываем кол-во найденных уникальных объявлений
        ProgressBar1.Position := 0;
        ProgressBar1.Visible := True;
        FreeAndNil(IdHTTP);

        lst2 := TStringList.Create; //итоговый список всех данных для выгрузки
        stop_btn.Visible := True;
        Label4.Caption := 'Идёт загрузка данных';
        for i := lst1.Count - 1 downto 0 do
          begin
            if stop_flag then
              Break
            else
              begin
                try
                  begin
                    IdHTTP := TIdHTTP.Create;    //создаем IdHTTP
                    IdHTTP.ProtocolVersion := pv1_1;
                    IdHTTP.HandleRedirects := True;
                    IdHTTP.Request.UserAgent := 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36';
                    IdHTTP.Request.CustomHeaders.Add('Accept: */*');
                    IdHTTP.Request.CustomHeaders.Add('Accept-Encoding:gzip, deflate, sdch, br');
                    IdHTTP.Request.CustomHeaders.Add('Accept-Language:ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4');
                    IdHTTP.Request.CustomHeaders.Add('Referer: https://www.olx.kz/obyavlenie/' + lst1.Strings[i] + '.html');
                    s := IdHTTP.Get('https://www.olx.kz/obyavlenie/' + lst1.Strings[i] + '.html');
                    try
                      begin
                        re1.Expression := 'phoneToken = ''(.*?)'';';
                        re1.Exec(s);
                        t := IdHTTP.Get('https://www.olx.kz/ajax/misc/contact/phone/' + copy(lst1.Strings[i], Pos('ID', lst1.Strings[i]) + 2, 5) + '/?pt=' + re1.Match[1]);    //Телефон
                        re1.Expression := '{"value":"(.*?)"}';
                        ph := ''; //телефон  
                        if re1.Exec(t) then
                          repeat
                            ph := ph + ';' + re1.Match[1];
                          until not re1.ExecNext;
                      end;
                    except
                      begin
                        if pos('data-phone=', s) > 0 then
                          begin
                            re1.Expression := 'data-phone="(.*?)">';
                            ph := ''; //телефон
                            if re1.Exec(s) then
                              repeat
                                if (Pos('.', re1.Match[1]) = 0) and (Length(re1.Match[1]) > 9) then ph := ph + ';' + re1.Match[1];
                              until not re1.ExecNext;
                          end;
                      end;
                    end;
                    ph := StringReplace(ph, '<span class=\"block\">', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '<\/span>', ';', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '+', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '-', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ' ', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '(', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ')', '', [rfReplaceAll, rfIgnoreCase]);
                    if Copy(ph, 1, 1) = ';' then ph := Copy(ph, 2, Length(ph) - 1);
                    if (Length(ph) = 11) and (Copy(ph, 1, 1) = '7') then ph := '8' + copy(ph, 2, 10);
                    re1.Expression := '"block brkword xx-large">(.*?)</span>';    //имя
                    re1.Exec(s);
                    nm := re1.Match[1];
                    re1.Expression := 'show-map-link" href=""><strong>(.*?)</strong>';    //город
                    re1.Exec(s);
                    ct := re1.Match[1];
                    lst2.Add(nm + ';' + ct + ';' + ph);
                    Edit2.Text := IntToStr(lst2.Count); //показываем кол-во найденных уникальных номеров
                    ProgressBar1.Position := Round((lst2.Count / lst1.Count) * 100);
                    data_list.Cells[0, lst1.Count - i] := nm;
                    data_list.Cells[1, lst1.Count - i] := ct;
                    data_list.Cells[2, lst1.Count - i] := ph;
                    FreeAndNil(IdHTTP);
                  end;
                except
                  begin
                    data_list.Cells[0, lst1.Count - i] := 'Ошибка'; //иначе ошибка
                    data_list.Cells[1, lst1.Count - i] := 'Ошибка';
                    data_list.Cells[2, lst1.Count - i] := 'Ошибка';
                    Continue;
                  end;
                end;
              end;
          end;
      end;      

    1:    //Колёса
      begin
        Link := Edit3.Text;
        flag := True;
        i := 1;
        if Pos('?', Link) > 0 then
          st := '&'
        else
          st := '?';
        re1 := TRegExpr.Create;
        re1.Expression := '<a href="/a/show/(.*?)" cla';
        lst1 := TStringList.Create; //список ID объявлений
        IdHTTP := TIdHTTP.Create;
        IdSSL := TIdSSLIOHandlerSocketOpenSSL.Create;
        IdHTTP.IOHandler := IdSSL;
        IdHTTP.HandleRedirects := True;
        IdHTTP.Request.UserAgent := 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36';
        IdHTTP.Request.CustomHeaders.Add('Accept: */*');
        IdHTTP.Request.CustomHeaders.Add('Accept-Encoding: gzip, deflate, br');
        IdHTTP.Request.CustomHeaders.Add('Accept-Language: ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7');
        IdHTTP.Request.CustomHeaders.Add('X-Requested-With: XMLHttpRequest');
        IdHTTP.Request.CustomHeaders.Add('Referer: ' + Link);
        Label4.Caption := 'Идёт сбор объявлений';
        while flag = True do
          begin
            s := IdHTTP.Get(Link + st + 'page=' + IntToStr(i));
            s := Copy(s, 1, Pos('Авто в Казахстане', s));
            if re1.Exec(s) then    //собираем ID объявлений
              repeat
                lst1.Add(re1.Match[1]);
              until not re1.ExecNext;
            i := i + 1;
            Edit1.Text := IntToStr(lst1.Count);    //показываем кол-во найденных объявлений
            if (Pos('следую', s) = 0) or (Pos('gray right-arrow', s) > 0) then flag := False;
          end;
        for i := lst1.Count - 1 downto 0 do       //удаление дубликатов
          if lst1.IndexOf(lst1.Strings[i]) < i then lst1.Delete(i);
        Edit1.Text := IntToStr(lst1.Count); //показываем кол-во найденных уникальных объявлений
        ProgressBar1.Position := 0;
        ProgressBar1.Visible := True;

        lst2 := TStringList.Create; //итоговый список всех данных для выгрузки
        stop_btn.Visible := True;
        Label4.Caption := 'Идёт загрузка данных';
        for i := lst1.Count - 1 downto 0 do
          begin
            if stop_flag then
              Break
            else
              begin
                try
                  begin
                    t := IdHTTP.Get('https://kolesa.kz/a/show/' + lst1.Strings[i]);
                    s := IdHTTP.Get('http://kolesa.kz/a/ajaxPhones/?id=' + lst1.Strings[i]);
                    re1.Expression := 'phone":"(.*?)"}';        //Телефон
                    re1.Exec(s);
                    ph := StringReplace(re1.Match[1], '\u00a0', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '(', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ')', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '-', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ' ', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ',', ';', [rfReplaceAll, rfIgnoreCase]);
                    re1.Expression := 'Город</dt>(.*?)dd>';     //Город
                    re1.Exec(t);
                    ct := Trim(re1.Match[1]);
                    re1.Expression := 'clearfix">(.*?)</';
                    re1.Exec(ct);
                    ct := Trim(re1.Match[1]);
                    nm := IdHTTP.Get('https://kolesa.kz/comment/ajax-comments/' + lst1.Strings[i]);
                    if Pos('Комментариев пока нет', s) = 0 then
                      begin
                        re1.Expression := 'class="owner">(.*?)</';
                        re1.Exec(nm);
                        nm := Trim(re1.Match[1]);                    
                      end
                    else
                      nm := 'none';
                    lst2.Add(nm + ';' + ct + ';' + ph);
                    Edit2.Text := IntToStr(lst2.Count); //показываем кол-во найденных уникальных номеров
                    ProgressBar1.Position := Round((lst2.Count / lst1.Count) * 100);
                    data_list.Cells[0, lst1.Count - i] := nm;
                    data_list.Cells[1, lst1.Count - i] := ct;
                    data_list.Cells[2, lst1.Count - i] := ph;
                  end;
                except
                  begin
                    //data_list.Cells[0, lst1.Count - i] := 'Ошибка'; //иначе ошибка
                    data_list.Cells[1, lst1.Count - i] := 'Ошибка';
                    data_list.Cells[2, lst1.Count - i] := 'Ошибка';
                    Continue;
                  end;
                end;
              end;
          end;
      end;

    2:    //Крыша
      begin
        Link := Edit3.Text;
        flag := True;
        i := 1;
        if Pos('?', Link) > 0 then
          st := '&'
        else
          st := '?';
        re1 := TRegExpr.Create;
        re1.Expression := 'link" href="/a/show/(.*?)" title';
        lst1 := TStringList.Create; //список ID объявлений
        IdHTTP := TIdHTTP.Create;
        IdSSL := TIdSSLIOHandlerSocketOpenSSL.Create;
        IdHTTP.IOHandler := IdSSL;
        IdHTTP.HandleRedirects := True;
        IdHTTP.Request.UserAgent := 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36';
        IdHTTP.Request.CustomHeaders.Add('Accept: */*');
        IdHTTP.Request.CustomHeaders.Add('Accept-Encoding: gzip, deflate, br');
        IdHTTP.Request.CustomHeaders.Add('Accept-Language: ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7');
        IdHTTP.Request.CustomHeaders.Add('X-Requested-With: XMLHttpRequest');
        IdHTTP.Request.CustomHeaders.Add('Referer: ' + Link);
            Label4.Caption := 'Идёт сбор объявлений';
        while flag = True do
          begin
            s := IdHTTP.Get(Link + st + 'page=' + IntToStr(i));
            s := Copy(s, 1, Pos('Недвижимость в Казахстане', s));
            if re1.Exec(s) then    //собираем ID объявлений
              repeat
                lst1.Add(re1.Match[1]);
              until not re1.ExecNext;
            i := i + 1;
            Edit1.Text := IntToStr(lst1.Count);    //показываем кол-во найденных объявлений
            if Pos('Дальше', s) = 0 then flag := False;
          end;
        for i := lst1.Count - 1 downto 0 do       //удаление дубликатов
          if lst1.IndexOf(lst1.Strings[i]) < i then lst1.Delete(i);
        Edit1.Text := IntToStr(lst1.Count); //показываем кол-во найденных уникальных объявлений
        ProgressBar1.Position := 0;
        ProgressBar1.Visible := True;

        lst2 := TStringList.Create; //итоговый список всех данных для выгрузки
        stop_btn.Visible := True;
        Label4.Caption := 'Идёт загрузка данных';
        for i := lst1.Count - 1 downto 0 do
          begin
            if stop_flag then
              Break
            else
              begin
                try
                  begin
                    t := IdHTTP.Get('https://krisha.kz/a/show/' + lst1.Strings[i]);
                    s := IdHTTP.Get('http://krisha.kz/a/ajaxPhones/?id=' + lst1.Strings[i]);
                    re1.Expression := '\[(.*?)\]';        //Телефон
                    re1.Exec(s);
                    ph := StringReplace(re1.Match[1], '\u00a0', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '(', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ')', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '-', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ' ', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '"', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ',', ';', [rfReplaceAll, rfIgnoreCase]);
                    re1.Expression := 'a-where-region">(.*?)</div>';        //Город
                    re1.Exec(t);
                    ct := Trim(re1.Match[1]);
                    if Pos('link-underlined"', t) > 0 then    //Имя
                      begin
                        re1.Expression := 'link-underlined">(.*?)</a>';
                        re1.Exec(t);
                        nm := Trim(re1.Match[1]);
                      end
                    else
                      nm := 'Хозяин';
                    lst2.Add(nm + ';' + ct + ';' + ph); //добавляем данные в итоговый список
                    Edit2.Text := IntToStr(lst2.Count); //показываем кол-во найденных уникальных номеров
                    ProgressBar1.Position := Round((lst2.Count / lst1.Count) * 100);
                    data_list.Cells[0, lst1.Count - i] := nm;
                    data_list.Cells[1, lst1.Count - i] := ct;
                    data_list.Cells[2, lst1.Count - i] := ph;
                  end;
                except
                  begin
                    data_list.Cells[0, lst1.Count - i] := 'Ошибка'; //иначе ошибка
                    data_list.Cells[1, lst1.Count - i] := 'Ошибка';
                    data_list.Cells[2, lst1.Count - i] := 'Ошибка';
                    Continue;
                  end;
                end;
              end;
          end;
      end;

    3:    //Маркет
      begin
        if Pos('?', Edit3.Text) = 0 then    //определяем ссылку
          begin
            Link := Edit3.Text;
            pLink := '';
          end
        else
          begin
            Link := Copy(Edit3.Text, 1, Pos('?', Edit3.Text) - 1);
            pLink := '&' + Copy(Edit3.Text, Pos('?', Edit3.Text) + 1, Length(Edit3.Text) - Pos('?', Edit3.Text) + 1);
          end;
        flag := True;
        i := 1;
        re1 := TRegExpr.Create;
        lst1 := TStringList.Create; //список расширенных ID объявлений с названиями в транслите
        lst3 := TStringList.Create; //список ID объявлений
        IdHTTP := TIdHTTP.Create;
        IdSSL := TIdSSLIOHandlerSocketOpenSSL.Create;
        IdHTTP.IOHandler := IdSSL;
        IdHTTP.HandleRedirects := True;
        IdHTTP.Request.UserAgent := 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36';
        IdHTTP.Request.CustomHeaders.Add('Accept: */*');
        IdHTTP.Request.CustomHeaders.Add('Accept-Encoding: gzip, deflate, br');
        IdHTTP.Request.CustomHeaders.Add('Accept-Language: ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7');
        IdHTTP.Request.CustomHeaders.Add('X-Requested-With: XMLHttpRequest');
        IdHTTP.Request.CustomHeaders.Add('Referer: ' + Link);
            Label4.Caption := 'Идёт сбор объявлений';
        while flag = True do
          begin
            s := IdHTTP.Get(Link + '?page=' + IntToStr(i) + pLink);
            re1.Expression := 'data-id="(.*?)">';    //собираем ID объявлений
            if re1.Exec(s) then
              repeat
                lst3.Add(re1.Match[1]);
              until not re1.ExecNext;
            re1.Expression := '<a href="https://market.kz/a/(.*?)">';    //собираем расширенные ID объявлений
            if re1.Exec(s) then
              repeat
                lst1.Add(re1.Match[1]);
              until not re1.ExecNext;
            i := i + 1;
            Edit1.Text := IntToStr(lst1.Count);    //показываем кол-во найденных объявлений
            if Pos('Вперед', s) = 0 then flag := False;
          end;
        for i := lst1.Count - 1 downto 0 do       //удаление дубликатов
          if lst1.IndexOf(lst1.Strings[i]) < i then lst1.Delete(i);
        for i := lst3.Count - 1 downto 0 do       //удаление дубликатов
          if lst3.IndexOf(lst3.Strings[i]) < i then lst3.Delete(i);
        Edit1.Text := IntToStr(lst1.Count); //показываем кол-во найденных уникальных объявлений
        ProgressBar1.Position := 0;
        ProgressBar1.Visible := True;

        lst2 := TStringList.Create; //итоговый список всех данных для выгрузки
        lst4 := TStringList.Create; //список параметров для получения номера телефона
        stop_btn.Visible := True;
        Label4.Caption := 'Идёт загрузка данных';
        for i := lst1.Count - 1 downto 0 do
          begin
            if stop_flag then
              Break
            else
              begin          
                lst4.Add('id=' + lst3.Strings[i]);
                re1.Expression := 'phones">(.*?)<';
                try
                  begin
                    s := IdHTTP.Post('https://market.kz/ajax/load-phones/', lst4);
                    t := IdHTTP.Get('https://market.kz/a/' + lst1.Strings[i]);
                    ph := ''; //телефон
                    if re1.Exec(s) then
                      repeat
                        ph := ph + ';' + re1.Match[1];
                      until not re1.ExecNext;
                    ph := StringReplace(ph, '(', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ')', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '-', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ' ', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '"', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ',', ';', [rfReplaceAll, rfIgnoreCase]);
                    if Copy(ph, 1, 1) = ';' then ph := Copy(ph, 2, Length(ph) - 1);
                    re1.Expression := '<dt>Регион</dt><dd>(.*?)</dd>';  //город
                    re1.Exec(t);
                    ct := Trim(re1.Match[1]);
                    re1.Expression := '<a href="/profile/(.*?)</a>';  //имя
                    re1.Exec(t);
                    nm := StringReplace(Trim(re1.Match[1]), '/">', ' ', [rfReplaceAll, rfIgnoreCase]);
                    lst2.Add(nm + ';' + ct + ';' + ph); //добавляем данные в итоговый список
                    Edit2.Text := IntToStr(lst2.Count); //показываем кол-во найденных уникальных номеров
                    ProgressBar1.Position := Round((lst2.Count / lst1.Count) * 100);
                    data_list.Cells[0, lst1.Count - i] := nm;
                    data_list.Cells[1, lst1.Count - i] := ct;
                    data_list.Cells[2, lst1.Count - i] := ph;
                    lst4.Clear;
                  end;
                except
                  begin
                    data_list.Cells[0, lst1.Count - i] := 'Ошибка'; //иначе ошибка
                    data_list.Cells[1, lst1.Count - i] := 'Ошибка';
                    data_list.Cells[2, lst1.Count - i] := 'Ошибка';
                    Continue;
                  end;
                end;
              end;
          end;
        FreeAndNil(lst3);
        FreeAndNil(lst4);
      end;

    4:    //Satu
      begin
        if Pos('?', Edit3.Text) = 0 then    //определяем ссылку
          begin
            Link := Edit3.Text;
            pLink := '';
          end
        else
          begin
            Link := Copy(Edit3.Text, 1, Pos('?', Edit3.Text) - 1);
            pLink := '?' + Copy(Edit3.Text, Pos('?', Edit3.Text) + 1, Length(Edit3.Text) - Pos('?', Edit3.Text) + 1);
          end;
        st := Copy(Edit3.Text, 1, Pos('satu.kz', Edit3.Text) - 1);
        flag := True;
        i := 1;
        re1 := TRegExpr.Create;
        re1.Expression := 'div><a href="(.*?)" data-qaid';
        lst1 := TStringList.Create; //список ID объявлений
        IdHTTP := TIdHTTP.Create;
        IdSSL := TIdSSLIOHandlerSocketOpenSSL.Create;
        IdHTTP.IOHandler := IdSSL;
        IdHTTP.HandleRedirects := True;
        IdHTTP.Request.UserAgent := 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36';
        IdHTTP.Request.CustomHeaders.Add('Accept: */*');
        IdHTTP.Request.CustomHeaders.Add('Accept-Encoding: gzip, deflate, br');
        IdHTTP.Request.CustomHeaders.Add('Accept-Language: ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7');
        IdHTTP.Request.CustomHeaders.Add('Referer: ' + Link);
            Label4.Caption := 'Идёт сбор объявлений';
        while flag = True do
          begin
            s := IdHTTP.Get(Link + ';' + IntToStr(i) + pLink);
            s := Copy(s, 1, Pos('ProductRecommendations', s));
            if re1.Exec(s) then    //собираем ID объявлений
              repeat
                lst1.Add(re1.Match[1]);
              until not re1.ExecNext;
            i := i + 1;
            Edit1.Text := IntToStr(lst1.Count);    //показываем кол-во найденных объявлений
            if Pos('Вперед', s) = 0 then flag := False;
          end;
        for i := lst1.Count - 1 downto 0 do       //удаление дубликатов
          if lst1.IndexOf(lst1.Strings[i]) < i then lst1.Delete(i);
        Edit1.Text := IntToStr(lst1.Count); //показываем кол-во найденных уникальных объявлений
        ProgressBar1.Position := 0;
        ProgressBar1.Visible := True;

        lst2 := TStringList.Create; //итоговый список всех данных для выгрузки
        stop_btn.Visible := True;
        Label4.Caption := 'Идёт загрузка данных';
        for i := lst1.Count - 1 downto 0 do
          begin
            if stop_flag then
              Break
            else
              begin
                try
                  begin
                    s := IdHTTP.Get(lst1.Strings[i]);
                    s := Copy(s, 1, Pos('Добавить в избранное', s));
                    s := Copy(s, Pos('data-pl-phones="', s), Pos('data-pl-main-phone=', s) - Pos('data-pl-phones="', s));
                    re1.Expression := '&#34;\+(.*?)&#34;,';        //Телефон
                    ph := ''; //телефон
                    if re1.Exec(s) then
                      repeat
                        ph := ph + ';' + re1.Match[1];
                      until not re1.ExecNext;
                    ph := StringReplace(ph, '(', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ')', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, '-', '', [rfReplaceAll, rfIgnoreCase]);
                    ph := StringReplace(ph, ' ', '', [rfReplaceAll, rfIgnoreCase]);
                    if Copy(ph, 1, 1) = ';' then ph := Copy(ph, 2, Length(ph) - 1);
                    {re1.Expression := 'a-where-region">(.*?)</div>';        //Город
                    re1.Exec(t);
                    ct := Trim(re1.Match[1]);
                    if Pos('link-underlined"', t) > 0 then    //Имя
                      begin
                        re1.Expression := 'link-underlined">(.*?)</a>';
                        re1.Exec(t);
                        nm := Trim(re1.Match[1]);
                      end
                    else
                      nm := 'Хозяин';}
                    lst2.Add(ph); //добавляем данные в итоговый список
                    //lst2.Add(nm + ';' + ct + ';' + ph); //добавляем данные в итоговый список
                    Edit2.Text := IntToStr(lst2.Count); //показываем кол-во найденных уникальных номеров
                    ProgressBar1.Position := Round((lst2.Count / lst1.Count) * 100);
                    //data_list.Cells[0, lst1.Count - i] := nm;
                    //data_list.Cells[1, lst1.Count - i] := ct;
                    data_list.Cells[2, lst1.Count - i] := ph;
                  end;
                except
                  begin
                    //data_list.Cells[0, lst1.Count - i] := 'Ошибка'; //иначе ошибка
                    //data_list.Cells[1, lst1.Count - i] := 'Ошибка';
                    data_list.Cells[2, lst1.Count - i] := 'Ошибка';
                    Continue;
                  end;
                end;
              end;
          end;
      end;
  end;
  FreeAndNil(IdHTTP); //убиваем всё созданное
  FreeAndNil(IdSSL);
  FreeAndNil(lst1);
  FreeAndNil(re1);
  Edit3.Enabled := True;
  start_btn.Enabled := True;
  clear_btn.Enabled := True;
  ProgressBar1.Position := 0;
  ProgressBar1.Visible := False;
  stop_btn.Visible := False;
  Label4.Caption := 'Удаление дубликатов';
  for i := lst2.Count - 1 downto 0 do       //удаление дубликатов из итогового списка
    if lst2.IndexOf(lst2.Strings[i]) < i then lst2.Delete(i);
  Edit2.Text := IntToStr(lst2.Count); //показываем кол-во загруженных уникальных номеров  
  SaveToFile;
end;

procedure TForm1.Edit3Change(Sender: TObject);
begin
  if (pos('https://www.olx.kz/', Edit3.Text) > 0)
    or (pos('https://kolesa.kz/', Edit3.Text) > 0)
    or (pos('https://krisha.kz/', Edit3.Text) > 0)
    or (pos('https://market.kz/', Edit3.Text) > 0)
    or (pos('satu.kz/', Edit3.Text) > 0) then
    begin
      start_btn.Enabled := True;
      Label4.Caption := '';
      Edit3.Color := clMoneyGreen;
      if pos('https://www.olx.kz/', Edit3.Text) > 0 then
        site := 0
      else if pos('https://kolesa.kz/', Edit3.Text) > 0 then
        site := 1
      else if pos('https://krisha.kz/', Edit3.Text) > 0 then
        site := 2
      else if pos('https://market.kz/', Edit3.Text) > 0 then
        site := 3;      
    end
  else if Edit3.Text = '' then
    begin
      start_btn.Enabled := False;
      Label4.Caption := '';
      Edit3.Color := clWindow;
    end
  else
    begin
      start_btn.Enabled := False;
      Label4.Caption := 'Неверная ссылка';
      Edit3.Color := clFuchsia;
    end;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  Form1.WindowState := wsMaximized;
  //WebBrowser1.Navigate('https://www.olx.kz/m');
  with data_list do
  begin
    Cells[0, 0] := 'Имя';
    Cells[1, 0] := 'Город';
    Cells[2, 0] := 'Телефон';
  end;
end;

procedure TForm1.clear_btnClick(Sender: TObject);
var
  i: Integer;
begin
  Edit1.Text := '0';
  Edit2.Text := '0';
  Edit3.Clear;
  stop_btn.Visible := False;
  ProgressBar1.Visible := False;
  ProgressBar1.Position := 0;
  with data_list do
    for i := FixedRows to RowCount - 1 do
      Rows[i].Clear;
end;

procedure TForm1.stop_btnClick(Sender: TObject);
begin
  stop_flag := True;
end;

procedure TForm1.SaveToFile;
begin
  Label4.Caption := 'Сохранение';
  if SaveDialog1.Execute then   
    begin
      if FileExists(SaveDialog1.FileName) then
        begin
          if MessageDlg(SaveDialog1.FileName + ' уже существует.' + #13#10 + 'Заменить?', mtConfirmation, mbYesNoCancel, 0) = mrYes then
            lst2.SaveToFile(SaveDialog1.FileName);
        end
      else
        lst2.SaveToFile(SaveDialog1.FileName);
    end;
  Label4.Caption := 'Завершено';
  FreeAndNil(lst2);
  RamClean;
end;

procedure TForm1.RamClean;
var
  MainHandle: THandle;
begin
  if Win32Platform = VER_PLATFORM_WIN32_NT then
  begin
    MainHandle := OpenProcess(PROCESS_ALL_ACCESS, false, GetCurrentProcessID);
    SetProcessWorkingSetSize(MainHandle, DWORD(-1), DWORD(-1));
    CloseHandle(MainHandle);
  end;
end;

end.
