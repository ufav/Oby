unit AZ;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,
  Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs, RegExpr, IdHTTP, Vcl.StdCtrls,
  IdBaseComponent, IdAntiFreezeBase, Vcl.IdAntiFreeze, Vcl.OleCtrls, SHDocVw,
  Vcl.ComCtrls, IdIOHandler, IdIOHandlerSocket, IdIOHandlerStack, IdSSL, IdSSLOpenSSL,
  Vcl.Grids, IdURI, System.UITypes, IdCookie, Vcl.ExtCtrls, IdComponent, IdTCPConnection,
  IdTCPClient;

type
  TForm1 = class(TForm)
    start_btn: TButton;
    Edit1: TEdit;
    IdAntiFreeze1: TIdAntiFreeze;
    SaveDialog1: TSaveDialog;
    ProgressBar1: TProgressBar;
    Edit2: TEdit;
    Label2: TLabel;
    Edit3: TEdit;
    Memo1: TMemo;
    Memo2: TMemo;
    Edit4: TEdit;
    Edit5: TEdit;
    Label1: TLabel;
    Label3: TLabel;
    data_list: TStringGrid;
    Label4: TLabel;
    clear_btn: TButton;
    stop_btn: TButton;
    only_phone_2gis: TRadioButton;
    all_2gis: TRadioButton;
    Memo3: TMemo;
    procedure FormCreate(Sender: TObject);
    procedure start_btnClick(Sender: TObject);
    procedure RamClean;
    procedure SaveToFile;
    procedure Edit3Change(Sender: TObject);
    procedure clear_btnClick(Sender: TObject);
    procedure stop_btnClick(Sender: TObject);
    procedure data_listMouseWheelDown(Sender: TObject; Shift: TShiftState;
      MousePos: TPoint; var Handled: Boolean);
    procedure data_listMouseWheelUp(Sender: TObject; Shift: TShiftState;
      MousePos: TPoint; var Handled: Boolean);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  lst2: TStringList;
  stop_flag: Boolean;
  site: Integer;
  Form1: TForm1;

implementation

{$R *.dfm}

uses
  System.IOUtils;

procedure TForm1.start_btnClick(Sender: TObject);
var
  i: Integer;        //PageCount
  IdHTTP: TIdHTTP;
  //IdSSL: TIdSSLIOHandlerSocketOpenSSL;
  s, st, t, ph, nm, ct, Link, pLink: string;    //Phone, Name, City
  lst1, lst3, lst4: TStringList;
  re1: TRegExpr;
  flag: Boolean;
begin
  Edit3.Enabled := False;
  start_btn.Enabled := False;
  clear_btn.Enabled := False;
  stop_flag := False;
  flag := True;
  re1 := TRegExpr.Create;
  lst1 := TStringList.Create; //список ID объявлений
  lst2 := TStringList.Create; //итоговый список всех данных для выгрузки
  IdHTTP := TIdHTTP.Create;
  //IdSSL := TIdSSLIOHandlerSocketOpenSSL.Create;
  //IdHTTP.IOHandler := IdSSL;
  IdHTTP.HandleRedirects := True;
  IdHTTP.Request.UserAgent := 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36';
  //IdHTTP.Request.CustomHeaders.Text:= 'Cookie: fix_version=0b886c3d6851182761d4e3259306ce80b76236f145c7fe186f9f19e59e19ae1ba%3A2%3A%7Bi%3A0%3Bs%3A11%3A%22fix_version%22%3Bi%3A1%3Bs%3A1%3A%221%22%3B%7D';
  //IdHTTP.Request.CustomHeaders.Add('Accept: */*');
  //IdHTTP.Request.CustomHeaders.Add('Accept-Encoding:gzip, deflate, sdch, br');
  //IdHTTP.Request.CustomHeaders.Add('Accept-Language:ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4');
  Label4.Caption := 'Сбор данных';
  case site of
    0:    //turbo.az
      begin
        i := 2;
        Link := Copy(Edit3.Text, 1, Pos('?', Edit3.Text));    //до вопросительного знака
        pLink := '&' + Copy(Edit3.Text, Pos('?', Edit3.Text) + 1, Length(Edit3.Text) - Pos('?', Edit3.Text) + 1);    //и после
        re1.Expression := 'k" href="/autos/(.*?)">';
        while flag do
          try
            s := IdHTTP.Get(Link + 'page=' + IntToStr(i) + pLink);
            Edit1.Text := Link + 'page=' + IntToStr(i) + pLink;
            if re1.Exec(s) then    //собираем ID объявлений
              repeat
                lst1.Add(re1.Match[1]);
              until not re1.ExecNext;
            i := i + 1;
            Edit1.Text := IntToStr(lst1.Count);    //показываем кол-во найденных объявлений
            if Pos('class="last"', s) = 0 then flag := False;
          except
            Continue;
          end;
        for i := lst1.Count - 1 downto 0 do       //удаление дубликатов
          if lst1.IndexOf(lst1.Strings[i]) < i then lst1.Delete(i);
        Edit1.Text := IntToStr(lst1.Count); //показываем кол-во найденных уникальных объявлений
        ProgressBar1.Position := 0;
        ProgressBar1.Visible := True;
        FreeAndNil(IdHTTP);
        //FreeAndNil(IdSSL);

        stop_btn.Visible := True;
        Label4.Caption := 'Загрузка данных';
        for i := lst1.Count - 1 downto 0 do
          begin
            if stop_flag then Break
            else
              try
                IdHTTP := TIdHTTP.Create;    //создаем IdHTTP
                //IdHTTP.ProtocolVersion := pv1_1;
                IdHTTP.HandleRedirects := True;
                //IdHTTP.Request.UserAgent := 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36';
                //IdHTTP.Request.CustomHeaders.Add('Accept: */*');
                //IdHTTP.Request.CustomHeaders.Add('Accept-Encoding:gzip, deflate, sdch, br');
                //IdHTTP.Request.CustomHeaders.Add('Accept-Language:ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4');
                //IdHTTP.Request.CustomHeaders.Add('Referer: https://www.olx.kz/obyavlenie/' + lst1.Strings[i] + '.html');
                s := IdHTTP.Get('http://ru.turbo.az/autos/' + lst1.Strings[i]);
                re1.Expression := 'tel:(.*?)">';
                re1.Exec(s);
                ph := '';
                if re1.Exec(s) then
                  repeat
                    ph := ph + ';' + re1.Match[1];
                  until not re1.ExecNext;
                ph := StringReplace(ph, '+', '', [rfReplaceAll, rfIgnoreCase]);
                ph := StringReplace(ph, '-', '', [rfReplaceAll, rfIgnoreCase]);
                ph := StringReplace(ph, ' ', '', [rfReplaceAll, rfIgnoreCase]);
                ph := StringReplace(ph, '(', '', [rfReplaceAll, rfIgnoreCase]);
                ph := StringReplace(ph, ')', '', [rfReplaceAll, rfIgnoreCase]);
                if Copy(ph, 1, 1) = ';' then ph := Copy(ph, 2, Length(ph) - 1);
                //if (Length(ph) = 11) and (Copy(ph, 1, 1) = '7') then ph := '8' + copy(ph, 2, 10);
                re1.Expression := 'seller-name"><p>(.*?)</p';    //имя
                re1.Exec(s);
                nm := re1.Match[1];
                re1.Expression := 'Город</label><div class="product-properties-value">(.*?)</d';    //город
                re1.Exec(s);
                ct := re1.Match[1];
                //lst2.Add(ph);
                lst2.Add(nm + ';' + ct + ';' + ph);
                Edit2.Text := IntToStr(lst2.Count); //показываем кол-во найденных уникальных номеров
                ProgressBar1.Position := Round((lst2.Count / lst1.Count) * 100);
                data_list.Cells[0, lst1.Count - i] := nm;
                data_list.Cells[1, lst1.Count - i] := ct;
                data_list.Cells[2, lst1.Count - i] := ph;
                FreeAndNil(IdHTTP);
              except
                data_list.Cells[0, lst1.Count - i] := 'Ошибка'; //иначе ошибка
                data_list.Cells[1, lst1.Count - i] := 'Ошибка';
                data_list.Cells[2, lst1.Count - i] := 'Ошибка';
                Continue;
              end;
          end;
      end;
    1:    //lalafo
      begin
        i := 1;
        Link := Edit3.Text;
        while flag do
          try
            s := IdHTTP.Get(Link + '?page=' + IntToStr(i));
            re1.Expression := 'name" href="(.*?)">';    //собираем ID объявлений
            if re1.Exec(s) then
              repeat
                lst1.Add(re1.Match[1]);
                //Memo1.Lines.Add(re1.Match[1]);
              until not re1.ExecNext;
            i := i + 1;
            Edit1.Text := IntToStr(lst1.Count);    //показываем кол-во найденных объявлений
            if Pos('pagn-next disabled', s) > 0 then flag := False;
          except
            Continue;
          end;
        for i := lst1.Count - 1 downto 0 do       //удаление дубликатов
          if lst1.IndexOf(lst1.Strings[i]) < i then lst1.Delete(i);
        Edit1.Text := IntToStr(lst1.Count); //показываем кол-во найденных уникальных объявлений
        ProgressBar1.Position := 0;
        ProgressBar1.Visible := True;
        FreeAndNil(IdHTTP);

        stop_btn.Visible := True;
        Label4.Caption := 'Загрузка данных';
        //IdHTTP.Request.CustomHeaders.Text:= 'Cookie: fix_version=0b886c3d6851182761d4e3259306ce80b76236f145c7fe186f9f19e59e19ae1ba%3A2%3A%7Bi%3A0%3Bs%3A11%3A%22fix_version%22%3Bi%3A1%3Bs%3A1%3A%221%22%3B%7D';
        for i := lst1.Count - 1 downto 0 do
        //for i := 0 to 0 do
          begin
            if stop_flag then Break
            else
              try
              //Memo1.Text := IdHTTP.Get('https://m.lalafo.az' + lst1.Strings[i]);
                IdHTTP := TIdHTTP.Create;
                IdHTTP.HandleRedirects := True;
                IdHTTP.Request.UserAgent := 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36';
                IdHTTP.Request.CustomHeaders.Text:= 'Cookie: fix_version=0b886c3d6851182761d4e3259306ce80b76236f145c7fe186f9f19e59e19ae1ba%3A2%3A%7Bi%3A0%3Bs%3A11%3A%22fix_version%22%3Bi%3A1%3Bs%3A1%3A%221%22%3B%7D';
                //s := IdHTTP.Get('https://m.lalafo.az/ru/baku/ads/lampa-id-41696220');
                //Memo1.Text := s;
                t := IdHTTP.Get('https://m.lalafo.az' + lst1.Strings[i]);
                s := IdHTTP.Get('https://lalafo.az' + lst1.Strings[i]);
                re1.Expression := 'tel:(.*?)"';  //телефон
                re1.Exec(t);
                ph := Trim(re1.Match[1]);
                re1.Expression := 'rop="name">(.*?)</dd>';  //город
                re1.Exec(s);
                ct := Trim(re1.Match[1]);
                re1.Expression := '/user/\d{6,}(.*?)</a';  //имя
                re1.Exec(s);
                nm := StringReplace(re1.Match[1], '&amp;', ' ', [rfReplaceAll, rfIgnoreCase]);
                nm := Trim(StringReplace(nm, '&quot;', ' ', [rfReplaceAll, rfIgnoreCase]));
                lst2.Add(nm + ';' + ct + ';' + ph); //добавляем данные в итоговый список
                Edit2.Text := IntToStr(lst2.Count); //показываем кол-во найденных уникальных номеров
                ProgressBar1.Position := Round((lst2.Count / lst1.Count) * 100);
                data_list.Cells[0, lst1.Count - i] := nm;
                data_list.Cells[1, lst1.Count - i] := ct;
                data_list.Cells[2, lst1.Count - i] := ph;
                FreeAndNil(IdHTTP);
              except
                data_list.Cells[0, lst1.Count - i] := 'Ошибка'; //иначе ошибка
                data_list.Cells[1, lst1.Count - i] := 'Ошибка';
                data_list.Cells[2, lst1.Count - i] := 'Ошибка';
                Continue;
              end;
          end;
      end;
  end;
  FreeAndNil(IdHTTP); //убиваем всё созданное
  //FreeAndNil(IdSSL);
  FreeAndNil(lst1);
  FreeAndNil(re1);
  Edit3.Enabled := True;
  start_btn.Enabled := True;
  clear_btn.Enabled := True;
  ProgressBar1.Position := 0;
  ProgressBar1.Visible := False;
  stop_btn.Visible := False;
  Label4.Caption := 'Удаление дубликатов';
  for i := lst2.Count - 1 downto 0 do       //удаление дубликатов из итогового списка
    if lst2.IndexOf(lst2.Strings[i]) < i then lst2.Delete(i);
  Edit2.Text := IntToStr(lst2.Count); //показываем кол-во загруженных уникальных номеров
  SaveToFile;
end;

procedure TForm1.Edit3Change(Sender: TObject);
var
  IdHTTP: TIdHTTP;
  IdSSL: TIdSSLIOHandlerSocketOpenSSL;
  s: string;
begin
  //Edit3.SelStart := 0;
  //Edit3.SelLength := 0;
  Label4.Caption := 'Проверка ссылки';
  IdHTTP := TIdHTTP.Create;
  //IdSSL := TIdSSLIOHandlerSocketOpenSSL.Create;
  //IdHTTP.IOHandler := IdSSL;
  IdHTTP.HandleRedirects := True;
  //IdHTTP.ProtocolVersion := pv1_1;
  //IdHTTP.Request.UserAgent := 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36';
  //IdHTTP.Request.CustomHeaders.Add('Accept: */*');
  //IdHTTP.Request.CustomHeaders.Add('Accept-Encoding:gzip, deflate, sdch, br');
  //IdHTTP.Request.CustomHeaders.Add('Accept-Language:ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4');
  //IdHTTP.Request.CustomHeaders.Add('Referer: ' + Edit3.Text);
  if Length(Edit3.Text) > 0 then
    try
      s := IdHTTP.Get(Edit3.Text);
      if (pos('turbo.az', Edit3.Text) > 0)
        or (pos('lalafo.az', Edit3.Text) > 0)
        or (pos('https://2gis.kz', Edit3.Text) > 0) then
        begin
          start_btn.Enabled := True;
          Label4.Caption := 'Ссылка исправна';
          Edit3.Color := clMoneyGreen;
          if pos('turbo.az', Edit3.Text) > 0 then
            site := 0
          else if pos('lalafo.az', Edit3.Text) > 0 then
            site := 1
          else if pos('2gis.kz', Edit3.Text) > 0 then
            begin
              site := 5;
              all_2gis.Visible := True;
              only_phone_2gis.Visible := True;
            end
        end
    except
      start_btn.Enabled := False;
      Label4.Caption := 'Неверная ссылка';
      Edit3.Color := clFuchsia;
    end
  else if Edit3.Text = '' then
    begin
      start_btn.Enabled := False;
      Label4.Caption := '';
      Edit3.Color := clWindow;
    end;
  FreeAndNil(IdHTTP);
  //FreeAndNil(IdSSL);
end;


procedure TForm1.data_listMouseWheelDown(Sender: TObject; Shift: TShiftState;
  MousePos: TPoint; var Handled: Boolean);
begin
  data_list.Perform(WM_VSCROLL, 1, 0);
  Handled := True;
end;

procedure TForm1.data_listMouseWheelUp(Sender: TObject; Shift: TShiftState;
  MousePos: TPoint; var Handled: Boolean);
begin
  data_list.Perform(WM_VSCROLL, 0, 0);
  Handled := True;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  //Form1.WindowState := wsMaximized;
  start_btn.Enabled := False;
  //WebBrowser1.Navigate('https://www.olx.kz/m');
  with data_list do
  begin
    Cells[0, 0] := 'Имя / Организация';
    Cells[1, 0] := 'Город / Адрес';
    Cells[2, 0] := 'Номер телефона';
  end;
end;

procedure TForm1.clear_btnClick(Sender: TObject);
var
  i: Integer;
begin
  Edit1.Text := '0';
  Edit2.Text := '0';
  Edit3.Clear;
  stop_btn.Visible := False;
  ProgressBar1.Visible := False;
  ProgressBar1.Position := 0;
  all_2gis.Visible := False;
  only_phone_2gis.Visible := False;
  with data_list do
    for i := FixedRows to RowCount - 1 do
      Rows[i].Clear;
  Edit3.SetFocus;
end;

procedure TForm1.stop_btnClick(Sender: TObject);
begin
  stop_flag := True;
end;

procedure TForm1.SaveToFile;
begin
  Label4.Caption := 'Сохранение';
  if SaveDialog1.Execute then
    begin
      if FileExists(SaveDialog1.FileName) then    //если такой файл уже есть
        begin
          if MessageDlg(SaveDialog1.FileName + ' уже существует.' + #13#10 + 'Заменить?', mtConfirmation, mbYesNoCancel, 0) = mrYes then
            lst2.SaveToFile(SaveDialog1.FileName);
        end
      else
        lst2.SaveToFile(SaveDialog1.FileName);
    end;
  Label4.Caption := 'Завершено';
  FreeAndNil(lst2);
  RamClean;
end;

procedure TForm1.RamClean;
var
  MainHandle: THandle;
begin
  if Win32Platform = VER_PLATFORM_WIN32_NT then
  begin
    MainHandle := OpenProcess(PROCESS_ALL_ACCESS, false, GetCurrentProcessID);
    SetProcessWorkingSetSize(MainHandle, DWORD(-1), DWORD(-1));
    CloseHandle(MainHandle);
  end;
end;

end.
