import ssl
import requests
import re
from requests.adapters import HTTPAdapter, PoolManager
from bs4 import BeautifulSoup
import mysql.connector

stats_url = 'https://vprognoze.ru/engine/modules/fc_statalluser.php?cid=201912&do=cmptopall&ajax=1&page='
predicts_url = 'https://vprognoze.ru/?do=cmptopall&action=rating&cid=201912&uid='
hdr = {'X-Requested-With': 'XMLHttpRequest',
       'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '
                     'Chrome/78.0.3904.108 Safari/537.36'}


class MyAdapter(HTTPAdapter):
    def init_poolmanager(self, connections, maxsize, block=False):
        self.poolmanager = PoolManager(num_pools=connections,
                                       maxsize=maxsize,
                                       block=block,
                                       ssl_version=ssl.PROTOCOL_TLSv1_2)


def get_html(url):
    r = requests.Session()
    r.mount('https://', MyAdapter())
    response = r.get(url, headers=hdr)
    return response.text


def insert_stats(uid, username, total, avgodd, wrate):
    connection = mysql.connector.connect(host='localhost',
                                         database='vp',
                                         user='root',
                                         password='Ghbrjk123')
    cursor = connection.cursor()
    try:
        query = """ INSERT INTO stats (uid, username, total, avgodd, wrate)
                    VALUES (%s, %s, %s, %s, %s) """
        record = (uid, username, total, avgodd, wrate)
        cursor.execute(query, record)
        connection.commit()
    except mysql.connector.Error as error:
        print("Failed to insert into MySQL table {}".format(error))
    finally:
        if connection.is_connected():
            cursor.close()
            connection.close()


def stats():
    html = ''
    for i in range(5):
        html = html + get_html(stats_url + str(i))
    soup = BeautifulSoup(html, 'html.parser')
    a = soup.find_all('a')
    for i in range(0, 1199, 12):
        insert_stats(re.search(r'uid=(.*?)"', str(a[i + 7])).group(1),  # uid
                     a[i + 1].text,  # username
                     a[i + 3].text,  # total
                     a[i + 7].text,  # avg odd
                     str(round(int(a[i + 4].text) / int(a[i + 3].text) * 100)))  # %
    for i in range(1200, len(a), 13):
        insert_stats(re.search(r'uid=(.*?)"', str(a[i + 8])).group(1),
                     a[i + 1].text,
                     a[i + 4].text,
                     a[i + 8].text,
                     str(round(int(a[i + 5].text) / int(a[i + 4].text) * 100)))


def querying():
    html = ''
    connection = mysql.connector.connect(host='localhost',
                                         database='vp',
                                         user='root',
                                         password='Ghbrjk123')
    cursor = connection.cursor()
    try:
        cursor.execute(""" SELECT uid
                           FROM stats
                           WHERE total >= 10 AND
                           avgodd >= 1.7 AND
                           wrate >= 75 """)
        # result = cursor.fetchall()
        result = list(cursor)
        for x in result:
            html = html + get_html(predicts_url + str(x[0]))
        soup = BeautifulSoup(html, 'html.parser')
        trl = soup.find_all('tr', class_='bgr_light')
        trd = soup.find_all('tr', class_='bgr_dark')
        tr = trl + trd
        lst = []
        for x in tr:
            if str(x).find('-:-') > 0:
                lst.append(x)
        td = []
        for x in lst:
            td.append(BeautifulSoup(str(x), 'html.parser').find_all('td'))
        for x in range(2, len(td[0]) - 2):
            print(td[0][x].text)
    except mysql.connector.Error as error:
        print("Error {}".format(error))
    finally:
        if connection.is_connected():
            cursor.close()
            connection.close()


def main():
    # stats()
    querying()


if __name__ == "__main__":
    main()
