import ssl
import requests
import re
from requests.adapters import HTTPAdapter, PoolManager
from bs4 import BeautifulSoup
import mysql.connector
import datetime
from urllib.parse import quote

stats_url = 'https://vprognoze.ru/engine/modules/fc_statalluser.php?cid=201912&do=cmptopall&ajax=1&page='
predicts_url = 'https://vprognoze.ru/?do=cmptopall&action=rating&cid='
hdr = {'X-Requested-With': 'XMLHttpRequest',
       'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '
                     'Chrome/78.0.3904.108 Safari/537.36'}
currentdatetime = datetime.date.today()


class MyAdapter(HTTPAdapter):
    def init_poolmanager(self, connections, maxsize, block=False):
        self.poolmanager = PoolManager(num_pools=connections,
                                       maxsize=maxsize,
                                       block=block,
                                       ssl_version=ssl.PROTOCOL_TLSv1_2)


def left(s, amount):
    return s[:amount]


def right(s, amount):
    return s[-amount:]


def mid(s, offset, amount):
    return s[offset:offset + amount]


def str_count(str, substr):
    count = 0
    i = -1
    while True:
        i = str.find(substr, i+1)
        if i == -1:
            return count
        count += 1


def get_html(url):
    r = requests.Session()
    r.mount('https://', MyAdapter())
    response = r.get(url, headers=hdr)
    return response.text


def insert_data(uid, username, total, avgodd, wrate):  # Добавление данных
    connection = mysql.connector.connect(host='localhost',
                                         database='vp',
                                         user='root',
                                         password='Ghbrjk123')
    cursor = connection.cursor()
    try:
        query = """ INSERT INTO stats (uid, username, total, avgodd, wrate)
                    VALUES (%s, %s, %s, %s, %s) """
        record = (uid, username, total, avgodd, wrate)
        cursor.execute(query, record)
        connection.commit()
    except mysql.connector.Error as error:
        print("Failed to insert into MySQL table {}".format(error))
    finally:
        if connection.is_connected():
            cursor.close()
            connection.close()


def delete_last_data():  # Удаление последних данных
    connection = mysql.connector.connect(host='localhost',
                                         database='vp',
                                         user='root',
                                         password='Ghbrjk123')
    cursor = connection.cursor()
    try:
        query = """ DELETE FROM stats
                    WHERE STR_TO_DATE(DATE_FORMAT(created, '%Y-%m-%d'),'%Y-%m-%d') IN (
                        SELECT max_date FROM (
                            SELECT STR_TO_DATE(DATE_FORMAT(MAX(created), '%Y-%m-%d'),'%Y-%m-%d') AS max_date FROM stats
                        ) AS max_stats
                    ) """
        cursor.execute(query)
        connection.commit()
    except mysql.connector.Error as error:
        print("Failed to insert into MySQL table {}".format(error))
    finally:
        if connection.is_connected():
            cursor.close()
            connection.close()


def stats():
    delete_last_data()
    html = ''
    for i in range(5):
        html = html + get_html(stats_url + str(i))
    a = BeautifulSoup(html, 'html.parser').find_all('a')
    for i in range(0, 1199, 12):
        insert_data(re.search(r'uid=(.*?)"', str(a[i + 7])).group(1),  # uid
                    a[i + 1].text,  # username
                    a[i + 3].text,  # total
                    a[i + 7].text,  # avg odd
                    str(round(int(a[i + 4].text) / int(a[i + 3].text) * 100)))  # %
    for i in range(1200, len(a), 13):
        insert_data(re.search(r'uid=(.*?)"', str(a[i + 8])).group(1),
                    a[i + 1].text,
                    a[i + 4].text,
                    a[i + 8].text,
                    str(round(int(a[i + 5].text) / int(a[i + 4].text) * 100)))


def querying():
    html = ''
    connection = mysql.connector.connect(host='localhost',
                                         database='vp',
                                         user='root',
                                         password='Ghbrjk123')
    cursor = connection.cursor()
    try:
        # cursor.execute(""" SELECT uid
        #                    FROM stats
        #                    WHERE total >= 10 AND
        #                    avgodd >= 1.7 AND
        #                    wrate >= 75 """)
        # # result = cursor.fetchall()
        # result = list(cursor)
        # for x in result:
        #     html = html + get_html(predicts_url +
        #                            str(datetime.datetime.now().year) + str(datetime.datetime.now().month) +
        #                            '&uid=' + str(x[0]))
        # soup = BeautifulSoup(html, 'html.parser')
        # trl = soup.find_all('tr', class_='bgr_light')
        # trd = soup.find_all('tr', class_='bgr_dark')
        # tr = trl + trd
        # lst1 = []
        # for x in tr:
        #     if (str(x).find('-:-') > 0) and \
        #             (str(x).find('Экспресс') == -1) and \
        #             (str(x).find('Борьба') == -1) and \
        #             (str(x).find('Шахматы') == -1) and \
        #             (str(x).find('борств') == -1) and \
        #             (str(x).find('боевые') == -1):
        #         lst1.append(x)
        # td = []
        # for x in lst1:
        #     td.append(BeautifulSoup(str(x), 'html.parser').find_all('td'))
        # lst2 = []
        # for x in range(0, len(td) - 1):
        #     lst3 = []
        #     for y in range(2, len(td[x]) - 2):
        #         lst3.append(td[x][y].text)
        #     d = left(lst3[0], 2)
        #     m = mid(lst3[0], 3, 2)
        #     y = currentdatetime.year
        #     t = lst3[0] = right(lst3[0], 5)
        #     lst3[0] = str(y) + '-' + m + '-' + d + ' ' + t
        #     lst2.append(lst3)
        # for i in lst2:
        #     print(i)
        lst1 = []
        cursor.execute("""  SELECT username
                            FROM stats """)
        result = list(cursor)
        for x in result:
            html = get_html('https://vprognoze.ru/user/' + str(x[0]))
            soup = BeautifulSoup(html, 'html.parser')
            div = str(soup.find('div', class_='user_info'))
            if div.count('respluscell') >= 8:
                lst1.append(x[0])
                print(str(x[0]))
    except mysql.connector.Error as error:
        print("Error {}".format(error))
    finally:
        if connection.is_connected():
            cursor.close()
            connection.close()


def main():
    # stats()
    querying()
    # datetime_show()
    # print(quote('р’сЏс‡рµсЃр»р°рІ', encoding='cp1251'))


def datetime_show():
    print(datetime.datetime.now().year)
    print(datetime.datetime.now().month)


if __name__ == "__main__":
    main()
