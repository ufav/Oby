
/////////////////////////////////////////////Как получить SHA1 в Indy:

uses IdHashSHA;
...
var Hash: string;
    IdHashSHA1: TIdHashSHA1;
    FS: TFileStream;
begin
  FS:=TFile.OpenRead('PATH_TO_FILE');
  IdHashSHA1:=TIdHashSHA1.Create;
  try
    S2:=IdHashSHA1.HashStreamAsHex(FS);
  finally
    IdHashSHA1.Free;
  end;
end;

/////////////////////////////////////////////Как получить SHA1 в Synapse:

uses synautil, synacode;
....
Hash:=StrToHex(SHA1(ReadStrFromStream(FS, FS.Size)));
....

/////////////////////////////////////////////Как получить SHA1 в DCPCRYPT (DCP):

var DCP_sha11: TDCP_sha1;
HashDigest: array of byte;
Hash: string;
begin
  DCP_sha11:=TDCP_sha1.Create(nil);
  try
    DCP_sha11.Init;
    DCP_sha11.UpdateStream(FS,FS.Size);
    SetLength(HashDigest,DCP_sha11.HashSize div 8);
    DCP_sha11.Final(HashDigest[0]);
    for i:= 0 to High(HashDigest) do
      Hash:= Hash + IntToHex(HashDigest[i],2);
  finally
    DCP_sha11.Free
  end;
end;

/////////////////////////////////////////////Как получить SHA1 в TurboPower LockBox:

var
 SHA1Hash: THash;
 CryptoLib: TCryptographicLibrary;
 Hash: string;
 aByte: byte;
begin
 SHA1Hash:=THash.Create(nil);
 try
   CryptoLib:=TCryptographicLibrary.Create(nil);
   try
     SHA1Hash.CryptoLibrary:=CryptoLib;
     SHA1Hash.Hash:='SHA-1';
     SHA1Hash.HashStream(FS);
     while SHA1Hash.HashOutputValue.Read(aByte, 1) = 1 do
      Hash:= Hash+Format('%.2x', [aByte]);
   finally
     CryptographicLibrary1.Free;
   end;
 finally
   SHA1Hash.Free 
 end;
end;

/////////////////////////////////////////////Как получить SHA1 в System.Hash:

var HashSHA1:THashSHA1;
    Hash: string;
    read: integer;
    buffer: array[0..16383] of byte;
begin
  HashSHA1:=THashSHA1.Create;
  repeat
    read := FS.Read(buffer,Sizeof(buffer));
    HashSHA1.Update(buffer,read);
  until read &lt;&gt; Sizeof(buffer);
  Hash:=HashSHA1.HashAsString;
end;
